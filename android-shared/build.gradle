apply plugin: 'com.android.library'
//apply plugin: 'com.android.application'

android {
    buildToolsVersion androidBuildToolsVersion
    compileSdkVersion androidCompileSdkVersion
    sourceSets {
        main {
            //manifest.srcFile 'AndroidManifest.xml'
            //java.srcDirs = ['src']
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            //res.srcDirs = ['res']
            //assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        instrumentTest.setRoot('tests')
    }
    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion androidTargetSdkVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    natives
}

dependencies {
    compile project(":core")
    compile "com.android.support:support-v4:${androidExtrasVer}"
    compile "com.android.support:appcompat-v7:${androidExtrasVer}"
    compile "com.android.support:cardview-v7:${androidExtrasVer}"
    compile "com.android.support:recyclerview-v7:${androidExtrasVer}"
    // doesn't work in library projects :(
    // compile 'com.jakewharton:butterknife:7.0.1'

    // gdx
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"

    // video player
    compile "com.google.android.exoplayer:exoplayer:${exoVersion}@aar"

    // exoplayer 2
    // compile "sagetv:exoplayer2:${exo2Version}@aar"

    // ijkplayer
//        compile "tv.danmaku.ijk.media:ijkplayer-java:${ijkVersion}"
//        compile "tv.danmaku.ijk.media:ijkplayer-armv7a:${ijkVersion}"
//        compile "tv.danmaku.ijk.media:ijkplayer-x86:${ijkVersion}"
    // requires API level 21
    // compile "tv.danmaku.ijk.media:ijkplayer-arm64:${ijkVersion}"
    // compile "tv.danmaku.ijk.media:ijkplayer-exo:${ijkVersion}"

    // If you are rebuilding your own ijkplaer, then comment the lines above and
    // then uncomment these.
    compile "sagetv.ijkplayer:ijkplayer-java:${ijkVersionDev}@aar"
    compile "sagetv.ijkplayer:ijkplayer-armv7a:${ijkVersionDev}@aar"
    compile "sagetv.ijkplayer:ijkplayer-x86:${ijkVersionDev}@aar"
    compile "sagetv.ijkplayer:ijkplayer-exo:${ijkVersionDev}@aar"

    // logging
    compile "com.github.tony19:logback-android-core:1.1.1-4"
    compile "com.github.tony19:logback-android-classic:1.1.1-4"

    compile "org.l6n:sendlog-library:2.0@aar"
    compile 'com.github.rahatarmanahmed:circularprogressview:2.4.0'

    // simple event bus
    compile 'com.squareup:otto:1.3.8'

    // animation library
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
}


// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() { 
    file("libs/armeabi/").mkdirs();
    file("libs/armeabi-v7a/").mkdirs();
    file("libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}
